{"ast":null,"code":"import _objectSpread from\"/Users/munaali/Desktop/Employee-Directory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/munaali/Desktop/Employee-Directory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/munaali/Desktop/Employee-Directory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/munaali/Desktop/Employee-Directory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/munaali/Desktop/Employee-Directory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import API from\"../utils/API\";import Card from\"../components/Card\";import Alert from\"../components/Alert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Discover=/*#__PURE__*/function(_Component){_inherits(Discover,_Component);var _super=_createSuper(Discover);function Discover(){var _this;_classCallCheck(this,Discover);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={image:\"\",match:false,matchCount:0};_this.handleBtnClick=function(event){// Get the data-value of the clicked button\nvar btnType=event.target.attributes.getNamedItem(\"data-value\").value;// Clone this.state to the newState object\n// We'll modify this object and use it to set our component's state\nvar newState=_objectSpread({},_this.state);if(btnType===\"pick\"){// Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\nnewState.match=1===Math.floor(Math.random()*5)+1;// Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\nnewState.matchCount=newState.match?newState.matchCount+1:newState.matchCount;}else{// If we thumbs down'ed the dog, we haven't matched with it\nnewState.match=false;}// Replace our component's state with newState, load the next dog image\n_this.setState(newState);_this.loadNextDog();};_this.loadNextDog=function(){API.getRandomDog().then(function(res){return _this.setState({image:res.data.message});}).catch(function(err){return console.log(err);});};return _this;}_createClass(Discover,[{key:\"componentDidMount\",value:// When the component mounts, load the next dog to be displayed\nfunction componentDidMount(){this.loadNextDog();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Make New Friends\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-center\",children:\"Thumbs up on any pups you'd like to meet!\"}),/*#__PURE__*/_jsx(Card,{image:this.state.image,handleBtnClick:this.handleBtnClick}),/*#__PURE__*/_jsxs(\"h1\",{className:\"text-center\",children:[\"Made friends with \",this.state.matchCount,\" pups so far!\"]}),/*#__PURE__*/_jsx(Alert,{style:{opacity:this.state.match?1:0},type:\"success\",children:\"Yay! That Pup Liked You Too!!!\"})]});}}]);return Discover;}(Component);export default Discover;","map":{"version":3,"sources":["/Users/munaali/Desktop/Employee-Directory/src/pages/Discover.js"],"names":["React","Component","API","Card","Alert","Discover","state","image","match","matchCount","handleBtnClick","event","btnType","target","attributes","getNamedItem","value","newState","Math","floor","random","setState","loadNextDog","getRandomDog","then","res","data","message","catch","err","console","log","opacity"],"mappings":"+wBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,2FAEMC,CAAAA,Q,mUACJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,CAENC,KAAK,CAAE,KAFD,CAGNC,UAAU,CAAE,CAHN,C,OAWRC,c,CAAiB,SAAAC,KAAK,CAAI,CACxB;AACA,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,YAAxB,CAAqC,YAArC,EAAmDC,KAAnE,CACA;AACA;AACA,GAAMC,CAAAA,QAAQ,kBAAQ,MAAKX,KAAb,CAAd,CAEA,GAAIM,OAAO,GAAK,MAAhB,CAAwB,CACtB;AACAK,QAAQ,CAACT,KAAT,CAAiB,IAAMU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,EAAgC,CAAvD,CAEA;AACAH,QAAQ,CAACR,UAAT,CAAsBQ,QAAQ,CAACT,KAAT,CAClBS,QAAQ,CAACR,UAAT,CAAsB,CADJ,CAElBQ,QAAQ,CAACR,UAFb,CAGD,CARD,IAQO,CACL;AACAQ,QAAQ,CAACT,KAAT,CAAiB,KAAjB,CACD,CACD;AACA,MAAKa,QAAL,CAAcJ,QAAd,EACA,MAAKK,WAAL,GACD,C,OAEDA,W,CAAc,UAAM,CAClBpB,GAAG,CAACqB,YAAJ,GACGC,IADH,CACQ,SAAAC,GAAG,QACP,OAAKJ,QAAL,CAAc,CACZd,KAAK,CAAEkB,GAAG,CAACC,IAAJ,CAASC,OADJ,CAAd,CADO,EADX,EAMGC,KANH,CAMS,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EANZ,EAOD,C,qEArCD;AACA,4BAAoB,CAClB,KAAKP,WAAL,GACD,C,sBAoCD,iBAAS,CACP,mBACE,oCACE,WAAI,SAAS,CAAC,aAAd,8BADF,cAEE,WAAI,SAAS,CAAC,aAAd,uDAFF,cAKE,KAAC,IAAD,EAAM,KAAK,CAAE,KAAKhB,KAAL,CAAWC,KAAxB,CAA+B,cAAc,CAAE,KAAKG,cAApD,EALF,cAME,YAAI,SAAS,CAAC,aAAd,gCACqB,KAAKJ,KAAL,CAAWG,UADhC,mBANF,cASE,KAAC,KAAD,EAAO,KAAK,CAAE,CAAEuB,OAAO,CAAE,KAAK1B,KAAL,CAAWE,KAAX,CAAmB,CAAnB,CAAuB,CAAlC,CAAd,CAAqD,IAAI,CAAC,SAA1D,4CATF,GADF,CAeD,C,sBA9DoBP,S,EAiEvB,cAAeI,CAAAA,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Card from \"../components/Card\";\nimport Alert from \"../components/Alert\";\n\nclass Discover extends Component {\n  state = {\n    image: \"\",\n    match: false,\n    matchCount: 0\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    this.loadNextDog();\n  }\n\n  handleBtnClick = event => {\n    // Get the data-value of the clicked button\n    const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n    // Clone this.state to the newState object\n    // We'll modify this object and use it to set our component's state\n    const newState = { ...this.state };\n\n    if (btnType === \"pick\") {\n      // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n      newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n      // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n      newState.matchCount = newState.match\n        ? newState.matchCount + 1\n        : newState.matchCount;\n    } else {\n      // If we thumbs down'ed the dog, we haven't matched with it\n      newState.match = false;\n    }\n    // Replace our component's state with newState, load the next dog image\n    this.setState(newState);\n    this.loadNextDog();\n  };\n\n  loadNextDog = () => {\n    API.getRandomDog()\n      .then(res =>\n        this.setState({\n          image: res.data.message\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"text-center\">Make New Friends</h1>\n        <h3 className=\"text-center\">\n          Thumbs up on any pups you'd like to meet!\n        </h3>\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} />\n        <h1 className=\"text-center\">\n          Made friends with {this.state.matchCount} pups so far!\n        </h1>\n        <Alert style={{ opacity: this.state.match ? 1 : 0 }} type=\"success\">\n          Yay! That Pup Liked You Too!!!\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default Discover;\n"]},"metadata":{},"sourceType":"module"}