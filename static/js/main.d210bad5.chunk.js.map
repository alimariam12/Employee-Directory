{"version":3,"sources":["utils/API.js","components/Table/employeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","state","employees","users","search","API","then","res","console","log","setState","data","results","this","map","each","index","alt","picture","medium","src","name","first","key","toUpperCase","id","renderTableHeader","renderTableData","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAEe,EACE,WACb,OAAOA,IAAMC,IAAI,0C,eCwDNC,E,4MAvDbC,MAAQ,CAENC,UAAW,GACXC,MAAO,GACPC,OAAQ,I,uDAGV,WAAqB,IAAD,OACnBC,IACCC,MAAK,SAACC,GACFC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAER,UAAWK,EAAII,KAAKC,e,6BAI1C,WACE,OAAOC,KAAKZ,MAAMC,UAAUY,KAAI,SAACC,EAAMC,GACrC,OACE,+BAEE,qBAAKC,IAAKF,EAAKG,QAAQC,OAAQC,IAAKL,EAAKG,QAAQC,SACjD,6BAAKJ,EAAKM,KAAKC,gB,+BAWvB,WAEE,MADa,CAAC,QAAS,OAAQ,QAAS,QAAS,YACnCR,KAAI,SAACS,EAAKP,GACtB,OAAO,6BAAiBO,EAAIC,eAAZR,Q,oBAIpB,WAEE,OACE,gCACE,oBAAIS,GAAG,QAAP,gCACA,uBAAOA,GAAG,YAAV,SACE,kCACE,6BAAKZ,KAAKa,sBACTb,KAAKc,8B,GAhDEC,aCKLC,MALf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d210bad5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getRandomUser: function() {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  },\n\n};","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nclass Table extends Component {\n  state = {\n    //state is by default an object\n    employees: [],\n    users: \"\",\n    search: \"\",\n  };\n\n  componentDidMount() {\n   API.getRandomUser()\n   .then((res) => {\n        console.log(res);\n        this.setState({ employees: res.data.results })\n})\n  }\n\n  renderTableData() {\n    return this.state.employees.map((each, index) => {\n      return (\n        <tr>\n          {/* <td>{each.results.image}</td> */}\n          <img alt={each.picture.medium} src={each.picture.medium}/>\n          <td>{each.name.first}</td>\n          {/* <td>{each.name.last}</td> */}\n          {/* <td>{each.results.email}</td>\n          <td>{each.results.location}</td> */}\n        </tr>\n        \n      );\n    });\n  }\n  \n\n  renderTableHeader() {\n    let header = [\"image\", \"name\", \"phone\", \"email\", \"location\"];\n    return header.map((key, index) => {\n      return <th key={index}>{key.toUpperCase()}</th>;\n    });\n  }\n\n  render() {\n    //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\n    return (\n      <div>\n        <h1 id=\"title\">Employee Directory</h1>\n        <table id=\"employees\">\n          <tbody>\n            <tr>{this.renderTableHeader()}</tr>\n            {this.renderTableData()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport EmployeeTable from \"./components/Table/employeeTable\";\n\n\nfunction App() {\n  return <EmployeeTable />;\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}